installed.packages('plotly')
install.packages('plotly')
install.packages('ggplot2')
install.packages('plotly')
library(ggplot2)
library(plotly)
pl<-ggplot(mtcars,aes(mpg,wt))+geom_point()
mpl<-ggplotly(pl)
mpl
print(mpl)
mpl<-ggplotly(mpl,p=ggplot2::last_plot())
pl<-ggplot(mtcars,aes(mpg,wt))+geom_point()
pl<-ggplot2(mtcars,aes(mpg,wt))+geom_point()
library(ggplot2)
library(plotly)
pl<-ggplot(mtcars,aes(mpg,wt))+geom_point()
print(pl)
mpl<-ggplotly(pl)
print(mpl)
mpl<- plot_ly(x=~pl,
type='histogram',
color=~code,
frame=~frame,
alpha=0.7)
print(mpl)
library(dplyr)
a<-mtcars
summary(a)
mtcars$rv<-mtcars$hp+mtcars$gear
mtcars
drop(mtcars$rv)
drop(mtcars$rv,)
drop(mtcars$rv)
mtcars
col(mtcars$rv)
col(-mtcars$rv)
col(drop(mtcars$rv))
a<-mtcars
summary(a0)
summary(a)
a$rv<-a$hp+a$gear
a
a<-subset(a,select = -c(rv))
a
height<-c(5.1,5.6,5.8,5.3,5.9,6.1)
height
weight<-c(55,62,61,58,65,54)
weight
data<-c(height,weight)
data
data<-as.data.frame(data)
adta
data
rm(data)
data<c(colnames(height)=height,colnames(weight)=weight)
model<-lm(weight~height)
summary(model)
a<-data.frame(x=6.3)
res<-predict(model,a)
res
rm(a,model)
rm(.)
rm(,)
x=c(5.2,5.9,5.7,5.6,5.5)
x
y=c(55,59,61,62,52)
y
model=lm(y~x)
a<-data.frame(x=6.1)
result<-predict(model,a)
result
result<-predict.lm(model,a)
result
rm(A)
rm(a,model)
a<-cars
View(a)
View(a)
View(a)
View(a)
carsmodel<-lm(dist~speed,a)
b1<-data.frame(speed=23)
result<-predict.lm(carsmodel,b1)
result
setwd("L:/ML with R/Support Vector Machine")
loans<-data.frame('loan_data.csv')
View(loans)
loans<-read.csv('loan_data.csv')
View(loans)
summary(loans)
summary(loans)
structure(loans)
structure(loans)
summary(loans)
structure(loans)
str(loans)
loans<-factor(loans$inq.last.6mths)
str(loans)
str(loans)
str(loans)
loans<-read.csv('loan_data.csv')
summary(loans)
str(loans)
loans$credit.policy <- factor(loans$credit.policy)
loans$inq.last.6mths <- factor(loans$inq.last.6mths)
loans$delinq.2yrs <- factor(loans$delinq.2yrs)
loans$pub.rec <- factor(loans$pub.rec)
loans$not.fully.paid <- factor(loans$not.fully.paid)
##histogram of fico scores colored by not.fully.paid
library(ggplot2)
pl<-ggplot(loans,aes(fico))+geom_histogram(aes(fill=not.fully.paid))
print(pl)
pl<-ggplot(loans,aes(fico))+geom_histogram(aes(fill=not.fully.paid),bins = 30)
print(pl)
pl<-ggplot(loans,aes(fico))+geom_histogram(aes(fill=not.fully.paid),bins = 30,color='black')
print(pl)
# barplot of purpose counts, colored by not.fully.paid. Use position=dodge in the geom_bar argument
pl2<-ggplot(loans,aes(purpose))+geom_bar(aes(fill=not.fully.paid),position = dodge)
print(pl2)
# barplot of purpose counts, colored by not.fully.paid. Use position=dodge in the geom_bar argument
pl2<-ggplot(loans,aes(purpose))+geom_bar(aes(fill=not.fully.paid),position = dodge)
# barplot of purpose counts, colored by not.fully.paid. Use position=dodge in the geom_bar argument
pl2<-ggplot(loans,aes(purpose))+geom_bar(aes(fill=not.fully.paid),position = dodge)
# barplot of purpose counts, colored by not.fully.paid. Use position=dodge in the geom_bar argument
pl2<-ggplot(loans,aes(purpose))+geom_bar(aes(fill=not.fully.paid),position = 'dodge')
print(pl2)
print(pl)
#scatterplot of fico score versus int.rate.
pl3<-ggplot(loans,aes(fico,int.rate))+geom_point()
print(pl3)
#scatterplot of fico score versus int.rate.
pl3<-ggplot(loans,aes(int.rate,fico))+geom_point()
print(pl3)
#scatterplot of fico score versus int.rate.
pl3<-ggplot(loans,aes(int.rate,fico))+geom_point(aes(color=not.fully.paid),alpha=0.3)
print(pl3)
library(caTools)
set.seed(101)
spl = sample.split(loans$not.fully.paid, 0.7)
train = subset(loans, spl == TRUE)
test = subset(loans, spl == FALSE)
library(e1071)
model<- svm(not.fully.paid~.,data = train)
summary(model)
predicted.values<-predict(model,test[1:13])
table(predicted.values,test$not.fully.paid)
tune.results <- tune(svm,train.x=not.fully.paid~., data=train,kernel='radial',
ranges=list(cost=c(1,10), gamma=c(0.1,1)))
model <- svm(not.fully.paid ~ .,data=train,cost=10,gamma = 0.1)
predicted.values <- predict(model,test[1:13])
table(predicted.values,test$not.fully.paid)
